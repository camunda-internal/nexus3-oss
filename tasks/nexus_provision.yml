---
- name: Check first-time install admin user and password
  uri:
    url: "{{ nexus_default_host }}:{{ nexus_default_port }}{{ nexus_default_context_path }}{{ nexus_rest_api_endpoint }}"
    user: 'admin'
    password: 'admin123'
    force_basic_auth: yes
    status_code: 200, 401
  register: first_time_install

- block:
  - name: First-time install admin user
    set_fact:
      current_nexus_admin_user: 'admin'

  - name: First-time install admin password
    set_fact:
      current_nexus_admin_password: 'admin123'
  when: first_time_install.status == 200

- name: Check install admin password
  uri:
    url: "{{ nexus_default_host }}:{{ nexus_default_port }}{{ nexus_default_context_path }}{{ nexus_rest_api_endpoint }}"
    user: "{{ nexus_admin_user }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: yes
    status_code: 200, 401
  register: already_installed
  when: first_time_install.status == 401

- block:
  - name: Set admin user
    set_fact:
      current_nexus_admin_user: "{{ nexus_admin_user }}"
    when: (already_installed is defined) and (already_installed.status is defined and already_installed.status == 200)

  - name: Subsequent re-provision admin password
    set_fact:
      current_nexus_admin_password: "{{ nexus_admin_password }}"
    no_log: true
  when: (already_installed is defined) and (already_installed.status is defined and already_installed.status == 200)

- fail:
    msg: "Unable to provision Nexus because no valid admin account available."
  when: current_nexus_admin_user is not defined and current_nexus_admin_password is not defined

- name: Create directory to hold current groovy scripts for reference
  file:
    path: "{{ nexus_data_dir }}/groovy-raw-scripts/current"
    state: directory
  when: not nexus_install_enable

- name: Upload new scripts
  synchronize:
    archive: no
    checksum: yes
    recursive: yes
    delete: yes
    mode: push
    use_ssh_args: yes
    src: "files/groovy/"
    dest: "{{ nexus_data_dir }}/groovy-raw-scripts/new/"

- name: Sync new scripts to old and get differences
  shell: 'rsync -ric {{ nexus_data_dir }}/groovy-raw-scripts/new/ {{ nexus_data_dir }}/groovy-raw-scripts/current/ | cut -d" " -f 2 | sed "s/\.groovy//g"'
  register: nexus_groovy_files_changed
  check_mode: no
  changed_when: false
  # simple check on changed files kept on host
  # skip ansible lint (we don't want to use synchronize module for this)
  args:
    warn: false

- name: Declare new or changed groovy scripts in nexus
  include: declare_script_each.yml
  with_items: "{{ nexus_groovy_files_changed.stdout_lines}}"
